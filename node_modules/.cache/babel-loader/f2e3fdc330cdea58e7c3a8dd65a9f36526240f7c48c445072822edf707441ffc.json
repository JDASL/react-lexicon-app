{"ast":null,"code":"var _jsxFileName = \"/Users/JD/Desktop/react-lexicon-app/src/Lexicon.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Results from \"./Results\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lexicon() {\n  _s();\n  let [keyword, setKeyword] = useState(null);\n  let [results, setResults] = useState(null);\n  function handleResponse(response) {\n    console.log(\"Full API Response:\", response.data); // Debugging\n\n    if (response.data.length > 0) {\n      setResults(response.data[0]); // Save first result\n    } else {\n      console.log(\"No results found\");\n      setResults(null);\n    }\n  }\n  function search(event) {\n    event.preventDefault();\n\n    // documentation: https://dictionaryapi.dev/\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${keyword}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Lexicon\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: search,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        onChange: handleKeywordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Lexicon, \"pmVYi6Y5O7+ZEXHrNbGz0sM8xuw=\");\n_c = Lexicon;\nvar _c;\n$RefreshReg$(_c, \"Lexicon\");","map":{"version":3,"names":["React","useState","Results","axios","jsxDEV","_jsxDEV","Lexicon","_s","keyword","setKeyword","results","setResults","handleResponse","response","console","log","data","length","search","event","preventDefault","apiUrl","get","then","handleKeywordChange","target","value","className","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/JD/Desktop/react-lexicon-app/src/Lexicon.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Results from \"./Results\";\nimport axios from \"axios\";\n\nexport default function Lexicon() {\n  let [keyword, setKeyword] = useState(null);\n  let [results, setResults] = useState(null);\n\n  function handleResponse(response) {\n    console.log(\"Full API Response:\", response.data); // Debugging\n\n    if (response.data.length > 0) {\n      setResults(response.data[0]); // Save first result\n    } else {\n      console.log(\"No results found\");\n      setResults(null);\n    }\n  }\n\n  function search(event) {\n    event.preventDefault();\n\n    // documentation: https://dictionaryapi.dev/\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${keyword}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n\n  return (\n    <div className=\"Lexicon\">\n      <form onSubmit={search}>\n        <input type=\"search\" onChange={handleKeywordChange} />\n      </form>\n      <Results results={results} />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,IAAI,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1C,SAASW,cAAcA,CAACC,QAAQ,EAAE;IAChCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;;IAElD,IAAIH,QAAQ,CAACG,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;MAC5BN,UAAU,CAACE,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,MAAM;MACLF,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BJ,UAAU,CAAC,IAAI,CAAC;IAClB;EACF;EAEA,SAASO,MAAMA,CAACC,KAAK,EAAE;IACrBA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;IACA,IAAIC,MAAM,GAAG,mDAAmDb,OAAO,EAAE;IACzEL,KAAK,CAACmB,GAAG,CAACD,MAAM,CAAC,CAACE,IAAI,CAACX,cAAc,CAAC;EACxC;EAEA,SAASY,mBAAmBA,CAACL,KAAK,EAAE;IAClCV,UAAU,CAACU,KAAK,CAACM,MAAM,CAACC,KAAK,CAAC;EAChC;EAEA,oBACErB,OAAA;IAAKsB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBvB,OAAA;MAAMwB,QAAQ,EAAEX,MAAO;MAAAU,QAAA,eACrBvB,OAAA;QAAOyB,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAEP;MAAoB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACP9B,OAAA,CAACH,OAAO;MAACQ,OAAO,EAAEA;IAAQ;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV;AAAC5B,EAAA,CAnCuBD,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}