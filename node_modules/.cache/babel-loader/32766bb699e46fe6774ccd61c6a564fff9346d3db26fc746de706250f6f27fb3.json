{"ast":null,"code":"var _jsxFileName = \"/Users/JD/Desktop/react-lexicon-app/src/Lexicon.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Results from \"./Results\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lexicon() {\n  _s();\n  let [keyword, setKeyword] = useState(\"\");\n  let [results, setResults] = useState(null);\n  function handleResponse(response) {\n    console.log();\n    setResults(response.data[0]);\n  }\n  function search(event) {\n    event.preventDefault();\n\n    // documentation: https://dictionaryapi.dev/\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${keyword}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Lexicon\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"What word do you want to look up?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: search,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: handleKeywordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hint\",\n        children: \"Suggested words: omega, society, international...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Lexicon, \"pwnfRSKh3+TqrraEDvmrMIW7mpY=\");\n_c = Lexicon;\nvar _c;\n$RefreshReg$(_c, \"Lexicon\");","map":{"version":3,"names":["React","useState","Results","axios","jsxDEV","_jsxDEV","Lexicon","_s","keyword","setKeyword","results","setResults","handleResponse","response","console","log","data","search","event","preventDefault","apiUrl","get","then","handleKeywordChange","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/Users/JD/Desktop/react-lexicon-app/src/Lexicon.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Results from \"./Results\";\nimport axios from \"axios\";\n\nexport default function Lexicon() {\n  let [keyword, setKeyword] = useState(\"\");\n  let [results, setResults] = useState(null);\n\n  function handleResponse(response) {\n    console.log();\n    setResults(response.data[0]);\n  }\n\n  function search(event) {\n    event.preventDefault();\n\n    // documentation: https://dictionaryapi.dev/\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${keyword}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n\n  return (\n    <div className=\"Lexicon\">\n      <section className=\"Search-bar\">\n        <h2>What word do you want to look up?</h2>\n        <form onSubmit={search}>\n          <input type=\"search\" onChange={handleKeywordChange} />\n        </form>\n        <div className=\"hint\">\n          Suggested words: omega, society, international...\n        </div>\n      </section>\n      <Results results={results} />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,IAAI,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1C,SAASW,cAAcA,CAACC,QAAQ,EAAE;IAChCC,OAAO,CAACC,GAAG,CAAC,CAAC;IACbJ,UAAU,CAACE,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;EAC9B;EAEA,SAASC,MAAMA,CAACC,KAAK,EAAE;IACrBA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;IACA,IAAIC,MAAM,GAAG,mDAAmDZ,OAAO,EAAE;IACzEL,KAAK,CAACkB,GAAG,CAACD,MAAM,CAAC,CAACE,IAAI,CAACV,cAAc,CAAC;EACxC;EAEA,SAASW,mBAAmBA,CAACL,KAAK,EAAE;IAClCT,UAAU,CAACS,KAAK,CAACM,MAAM,CAACC,KAAK,CAAC;EAChC;EAEA,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBtB,OAAA;MAASqB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC7BtB,OAAA;QAAAsB,QAAA,EAAI;MAAiC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1C1B,OAAA;QAAM2B,QAAQ,EAAEf,MAAO;QAAAU,QAAA,eACrBtB,OAAA;UAAO4B,IAAI,EAAC,QAAQ;UAACC,QAAQ,EAAEX;QAAoB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACP1B,OAAA;QAAKqB,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAEtB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACV1B,OAAA,CAACH,OAAO;MAACQ,OAAO,EAAEA;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV;AAACxB,EAAA,CAnCuBD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}