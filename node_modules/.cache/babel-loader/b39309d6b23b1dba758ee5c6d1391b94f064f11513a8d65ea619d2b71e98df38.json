{"ast":null,"code":"var _jsxFileName = \"/Users/JD/Desktop/react-lexicon-app/src/Results.js\";\nimport React from \"react\";\nimport Meaning from \"./Meaning\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Results(props) {\n  console.log(\"Received results in Results.js:\", props.results); // Debugging\n\n  if (props.results) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.results.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), props.results.meanings.map((meaning, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Meaning, {\n          meaning: meaning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n_c = Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","Meaning","jsxDEV","_jsxDEV","Results","props","console","log","results","className","children","word","fileName","_jsxFileName","lineNumber","columnNumber","meanings","map","meaning","index","_c","$RefreshReg$"],"sources":["/Users/JD/Desktop/react-lexicon-app/src/Results.js"],"sourcesContent":["import React from \"react\";\nimport Meaning from \"./Meaning\";\n\nexport default function Results(props) {\n  console.log(\"Received results in Results.js:\", props.results); // Debugging\n\n  if (props.results) {\n    return (\n      <div className=\"Results\">\n        <h2>{props.results.word}</h2>\n        {props.results.meanings.map((meaning, index) => (\n          <div key={index}>\n            <Meaning meaning={meaning} />\n          </div>\n        ))}\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,OAAOA,CAACC,KAAK,EAAE;EACrCC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;;EAE/D,IAAIH,KAAK,CAACG,OAAO,EAAE;IACjB,oBACEL,OAAA;MAAKM,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBP,OAAA;QAAAO,QAAA,EAAKL,KAAK,CAACG,OAAO,CAACG;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC5BV,KAAK,CAACG,OAAO,CAACQ,QAAQ,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzChB,OAAA;QAAAO,QAAA,eACEP,OAAA,CAACF,OAAO;UAACiB,OAAO,EAAEA;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADrBI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC,MAAM;IACL,OAAO,IAAI;EACb;AACF;AAACK,EAAA,GAjBuBhB,OAAO;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}