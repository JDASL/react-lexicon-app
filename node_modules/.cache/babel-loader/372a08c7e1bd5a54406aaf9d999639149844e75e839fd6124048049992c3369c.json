{"ast":null,"code":"var _jsxFileName = \"/Users/JD/Desktop/react-lexicon-app/src/Meaning.js\";\nimport React from \"react\";\nimport Synonyms from \"./Synonyms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meaning(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Meaning\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.meaning.partOfSpeech\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), props.meaning.definitions.map((definition, index) => {\n      console.log(\"Definition Object:\", definition); // Log the entire definition object\n      console.log(\"Synonyms Array:\", definition.synonyms); // Log synonyms directly\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Definition:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this), \" \", definition.definition]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), definition.example && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Example:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }, this), \" \\\"\", definition.example, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this), props.meaning.synonyms && props.meaning.synonyms.length > 0 ? /*#__PURE__*/_jsxDEV(Synonyms, {\n          synonyms: props.meaning.synonyms\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No synonyms available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Meaning;\nvar _c;\n$RefreshReg$(_c, \"Meaning\");","map":{"version":3,"names":["React","Synonyms","jsxDEV","_jsxDEV","Meaning","props","className","children","meaning","partOfSpeech","fileName","_jsxFileName","lineNumber","columnNumber","definitions","map","definition","index","console","log","synonyms","example","length","_c","$RefreshReg$"],"sources":["/Users/JD/Desktop/react-lexicon-app/src/Meaning.js"],"sourcesContent":["import React from \"react\";\nimport Synonyms from \"./Synonyms\";\n\nexport default function Meaning(props) {\n  return (\n    <div className=\"Meaning\">\n      <h3>{props.meaning.partOfSpeech}</h3>\n      {props.meaning.definitions.map((definition, index) => {\n        console.log(\"Definition Object:\", definition); // Log the entire definition object\n        console.log(\"Synonyms Array:\", definition.synonyms); // Log synonyms directly\n\n        return (\n          <div key={index}>\n            <p>\n              <strong>Definition:</strong> {definition.definition}\n            </p>\n            {definition.example && (\n              <p>\n                <strong>Example:</strong> \"{definition.example}\"\n              </p>\n            )}\n            {props.meaning.synonyms && props.meaning.synonyms.length > 0 ? (\n              <Synonyms synonyms={props.meaning.synonyms} />\n            ) : (\n              <p>No synonyms available</p>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,OAAOA,CAACC,KAAK,EAAE;EACrC,oBACEF,OAAA;IAAKG,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBJ,OAAA;MAAAI,QAAA,EAAKF,KAAK,CAACG,OAAO,CAACC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACpCR,KAAK,CAACG,OAAO,CAACM,WAAW,CAACC,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,KAAK;MACpDC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,UAAU,CAAC,CAAC,CAAC;MAC/CE,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,UAAU,CAACI,QAAQ,CAAC,CAAC,CAAC;;MAErD,oBACEjB,OAAA;QAAAI,QAAA,gBACEJ,OAAA;UAAAI,QAAA,gBACEJ,OAAA;YAAAI,QAAA,EAAQ;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACG,UAAU,CAACA,UAAU;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,EACHG,UAAU,CAACK,OAAO,iBACjBlB,OAAA;UAAAI,QAAA,gBACEJ,OAAA;YAAAI,QAAA,EAAQ;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,OAAE,EAACG,UAAU,CAACK,OAAO,EAAC,IACjD;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACJ,EACAR,KAAK,CAACG,OAAO,CAACY,QAAQ,IAAIf,KAAK,CAACG,OAAO,CAACY,QAAQ,CAACE,MAAM,GAAG,CAAC,gBAC1DnB,OAAA,CAACF,QAAQ;UAACmB,QAAQ,EAAEf,KAAK,CAACG,OAAO,CAACY;QAAS;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAE9CV,OAAA;UAAAI,QAAA,EAAG;QAAqB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC5B;MAAA,GAbOI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcV,CAAC;IAEV,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACU,EAAA,GA5BuBnB,OAAO;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}